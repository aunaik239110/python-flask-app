# .github/workflows/ci-cd.yaml
name: CI/CD Pipeline for Python Flask App

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main # Trigger on pull requests to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Action to check out your repository code

# --- ADD THESE DEBUGGING STEPS ---
    - name: List files in root
      run: |
        echo "Listing files in repository root (where Docker build context is):"
        ls -F
        echo ""

    - name: List files in app directory
      run: |
        echo "Listing files in 'app/' directory:"
        ls -F app/ || echo "Error: 'app/' directory not found or empty."
        echo ""
    # --- END DEBUGGING STEPS ---

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3 # Action to set up Docker Buildx for multi-platform builds

    - name: Log in to Docker Hub
      uses: docker/login-action@v3 # Action to log in to Docker Hub
      with:
        username: ${{ secrets.DOCKER_USERNAME }} # GitHub Secret for Docker Hub username
        password: ${{ secrets.DOCKER_PASSWORD }} # GitHub Secret for Docker Hub password

    - name: Build and push Docker image
      uses: docker/build-push-action@v5 # Action to build and push Docker images
      with:
        context: . # Build context is the current directory
        push: true # Push the image to the registry
        tags: ${{ secrets.DOCKER_USERNAME }}/python-flask-app:latest # Image tag
        # You can also use a dynamic tag based on commit SHA:
        # tags: ${{ secrets.DOCKER_USERNAME }}/python-flask-app:${{ github.sha }}

    - name: Set up Kubeconfig
      # IMPORTANT: This step assumes you have your Kubeconfig stored as a GitHub Secret.
      # For production environments, consider more secure authentication methods like OIDC.
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG_DATA }}" > ~/.kube/config
        chmod 600 ~/.kube/config
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }} # GitHub Secret containing your kubeconfig content

    - name: Deploy to Kubernetes
      run: |
        # Apply the Kubernetes deployment and service configurations
        # Ensure you replace 'your-dockerhub-username' in deployment.yaml
        # with your actual Docker Hub username before applying.
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml
